version: 2.1

references:
  images:
    go: &GOLANG_IMAGE cimg/go:1.14
    python: &PYTHON_IMAGE circleci/python:2.7-stretch

  paths:
    test-results: &TEST_RESULTS_DIR bin

  environment: &ENVIRONMENT
    TEST_RESULTS_DIR: *TEST_RESULTS_DIR
    GIT_EMAIL : "zup-ci@zup.com.br"
    GIT_USERNAME: "zup-ci"
    GIT_NAME: "Zup CI"

  filters: &FILTERS_DElIVERY
    branches:
      only:
        - master
        - /^release-.*/
        - qa

  filters-release: &FILTERS_RELEASE
    branches:
      only:
        - /^release-.*/

executors:
  ritchie-executor:
    docker:
      - image: *GOLANG_IMAGE
        user: root
    working_directory: /workspace

  delivery-executor:
    docker:
      - image: *PYTHON_IMAGE
        user: root
    working_directory: /workspace

jobs:
  # Runs Go linters
  lint:
    executor: ritchie-executor
    steps:
      - checkout
      - run:
          name: Install golangci-lint
          command: |
            download=https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh
            wget -O- -q $download | sh -s -- -b /go/bin/ v1.24.0
      - run: go mod download
      - run:
          name: lint
          command: |
            /go/bin/golangci-lint run

  unit_test:
    executor: ritchie-executor
    environment:
      <<: *ENVIRONMENT
    steps:
      - checkout
      - run:
          name: Running Unit tests
          command: |
            make unit-test
      - store_test_results:
          path: *TEST_RESULTS_DIR
      - store_artifacts:
          path: *TEST_RESULTS_DIR
      - run:
          name: codecov upload
          when: always
          command: bash <(curl -s https://codecov.io/bash)

  functional_test:
    executor: ritchie-executor
    environment:
      <<: *ENVIRONMENT
    steps:
      - checkout
      - attach_workspace:
            at: /workspace/dist
      - run:
          name: Running Functional tests
          command: |
            make functional-test
      - store_test_results:
          path: *TEST_RESULTS_DIR
      - store_artifacts:
          path: *TEST_RESULTS_DIR

  build:
    executor: ritchie-executor
    branches:
    steps:
      - checkout
      - run:
          name: Running build
          command: |
            . ./version.sh
            make build-circle
      - persist_to_workspace:
          root: dist
          paths:
            - linux
            - darwin
            - windows
      - store_test_results:
          path: *TEST_RESULTS_DIR
      - store_artifacts:
          path: *TEST_RESULTS_DIR

  delivery:
    executor: delivery-executor
    environment:
      <<: *ENVIRONMENT
    steps:
      - checkout
      - attach_workspace:
          at: /workspace/dist
      - run:
          name: Delivering cli binary
          command: |
            pip install awscli
            . ./version.sh
            . ./bucket.sh
            . ./credentials.sh
            make delivery

  release:
    environment:
      <<: *ENVIRONMENT
    executor: delivery-executor
    steps:
      - checkout
      - run:
          name: Releasing
          command: |
            . ./version.sh
            make release

workflows:
  build-for-branch:
    jobs:
      - lint
      - unit_test
      - build:
          requires:
            - unit_test
            - lint
      - functional_test:
          requires:
            - build
      - delivery:
          filters:
            <<: *FILTERS_DElIVERY
          requires:
            - build
      - release:
          filters:
            <<: *FILTERS_RELEASE
          requires:
            - build
