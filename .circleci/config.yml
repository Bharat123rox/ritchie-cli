version: 2.1

references:
  images:
    go: &GOLANG_IMAGE cimg/go:1.14
    python: &PYTHON_IMAGE circleci/python:2.7-stretch

  paths:
    test-results: &TEST_RESULTS_DIR bin

  environment: &ENVIRONMENT
    S3_ARTIFACT_BUCKET: ritchie-cli-bucket152849730126474
    TEST_RESULTS_DIR: *TEST_RESULTS_DIR

  filters: &FILTERS
    branches:
      only:
        - master
        - circleci-project-setup

executors:
  ritchie-executor:
    docker:
      - image: *GOLANG_IMAGE
        user: root
    working_directory: /workspace

  delivery-executor:
    docker:
      - image: *PYTHON_IMAGE
        user: root
    working_directory: /workspace

jobs:

  test:
    executor: ritchie-executor
    steps:
      - checkout
      - run:
          name: Running test
          command: |
            mkdir -p $TEST_RESULTS_DIR
            PACKAGE_NAMES=$(go list ./... | circleci tests split --split-by=timings --timings-type=classname)
            echo "Running $(echo $PACKAGE_NAMES | wc -w) packages"
            echo $PACKAGE_NAMES
            gotestsum --format=short-verbose \
              --junitfile $TEST_RESULTS_DIR/gotestsum-report.xml -- \
              -p 2 \
              -cover -coverprofile=coverage.txt \
              $PACKAGE_NAMES

      - store_test_results:
          path: *TEST_RESULTS_DIR
      - store_artifacts:
          path: *TEST_RESULTS_DIR
      - run:
          name: codecov upload
          when: always
          command: bash <(curl -s https://codecov.io/bash)

  build:
    executor: ritchie-executor
    branches:
    steps:
      - checkout
      - run:
          name: Running build
          command: |
            make build
      - persist_to_workspace:
          root: dist
          paths:
            - linux
            - darwin
            - windows
      - store_test_results:
          path: *TEST_RESULTS_DIR
      - store_artifacts:
          path: *TEST_RESULTS_DIR

  delivery:
    executor: delivery-executor
    environment:
      <<: *ENVIRONMENT
    steps:
      - checkout
      - attach_workspace:
          at: /workspace/dist
      - run:
          name: Running build
          command: |
            pip install awscli
            make toto

workflows:
  build_and_test:
    jobs:
      - test:
          filters:
            <<: *FILTERS
      - build:
          filters:
            <<: *FILTERS
          requires:
            - test
      - delivery:
          filters:
            <<: *FILTERS
          requires:
            - build